name: CI
on: [push, pull_request]

jobs:
  test:
    name: Dub Test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2019]
        # Remember to change the compiler versions further below as well as here
        dc:
          - dmd-2.108.0
          - dmd-2.105.2
          - ldc-1.37.0

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install ninja
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Install D compiler
        # Remember to change the version further below as well as here
        uses: dlang-community/setup-dlang@v1.3.0
        with:
          compiler: ${{ matrix.dc }}

      - name: "Posix: Run tests"
        if: runner.os != 'Windows'
        run: dub -q test -- ~@tup ~@travis_oops

      - name: "Windows: Run tests"
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          set
          :: set up MSVC environment (x64)
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=x64 || exit /b
          :: test
          set RUNNER_ARGS=~@tup ~@make ~@posix ~@javascript ~@lua ~@python ~@ruby
          if "%DC%" == "dmd" set RUNNER_ARGS=%RUNNER_ARGS% ~@fails-on-windows-with-dmd
          dub -q test -- %RUNNER_ARGS%
          if %ERRORLEVEL% NEQ 0 (
            echo.
            echo *** Retrying tests serially ***
            echo.
            dub -q test -- -d -s %RUNNER_ARGS% || exit /b
          )

  bootstrap:
    name: Bootstrap
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]
        dc:
          - dmd-2.108.0
          - dmd-2.105.2
          - ldc-1.37.0
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: "Windows: Install ninja"
        if: runner.os == 'Windows'
        uses: seanmiddleditch/gha-setup-ninja@master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1.3.0
        with:
          compiler: ${{ matrix.dc }}
      - name: Set OS-specific SCRIPT_CMD environment variable
        run: |
          if [[ '${{ runner.os }}' == 'Windows' ]]; then
            if [[ '${{ matrix.dc }}' = ldc* ]]; then
              # avoid out-of-memory kills by using a single ninja job
              echo "SCRIPT_CMD=cmd.exe //c call bootstrap.bat -j1" >> $GITHUB_ENV
            else
              echo "SCRIPT_CMD=cmd.exe //c call bootstrap.bat" >> $GITHUB_ENV
            fi
          else
            echo "SCRIPT_CMD=./bootstrap.sh" >> $GITHUB_ENV
          fi

      - name: Bootstrap with DC=${{ env.DC }}
        run: ${{ env.SCRIPT_CMD }}

      - name: "LDC: Bootstrap with DC=ldmd2"
        if: startsWith(matrix.dc, 'ldc')
        run: DC=ldmd2 ${{ env.SCRIPT_CMD }}
